# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch:
  push:
    branches: [ "develop", "release/*" ]
  
  workflow_run:
    workflows:
      - "Java CI with Maven"
    types: 
      - completed
    
jobs:
  maven:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v3

    - name: setup
      run: . .github/scripts/setup

    - name: checkout scripts
      run: git clone https://github.com/conxult/eval-script.git scripts

    - name: run script
      run: echo scripts/bin/do-something.sh

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: find . in build
      run: find . | grep -v .git/
    
    - name: mvn version
      run: |
        mvn versions:set -DnewVersion=$VERSION
        cd base && mvn versions:set -DnewVersion=$VERSION

    - name: mvn package
      run: mvn -B package

    - name: prepare publish
      run: |
        mkdir upload
        cp base/target/*.jar upload
        find upload
        echo GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ###
    - name: mvn publish
      uses: mg-smartrent/github-actions-maven-release@v1.5
      with:
        # Filter the branch to execute the release on
        release-branch-name: # optional
        # Maven server repository id to push the artefacts to
        maven-repo-server-id: 
        # Maven server repository username
        maven-repo-server-username: 
        # Maven server repository password
        maven-repo-server-password: 
        # The git user name for commiting the release
        git-release-bot-name: 
        # The git user email for commiting the release
        git-release-bot-email: 
        # Github access token. https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
        access-token: 
        # Publish the released artifact to GitHub Packages
        maven-release-publish: # optional
        # Publish the new post release snapshot artifact to GitHub Packages
        maven-snapshot-publish: # optional
      ###
